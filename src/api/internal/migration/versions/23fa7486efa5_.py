"""empty message

Revision ID: 23fa7486efa5
Revises: 
Create Date: 2024-12-11 15:11:16.286303

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '23fa7486efa5'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('account',
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('name', sa.String(length=255), server_default=sa.text("''::character varying"), nullable=False),
    sa.Column('email', sa.String(length=255), server_default=sa.text("''::character varying"), nullable=False),
    sa.Column('avatar', sa.String(length=255), server_default=sa.text("''::character varying"), nullable=False),
    sa.Column('password', sa.String(length=255), server_default=sa.text("''::character varying"), nullable=True),
    sa.Column('password_salt', sa.String(length=255), server_default=sa.text("''::character varying"), nullable=True),
    sa.Column('last_login_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP(0)'), nullable=False),
    sa.Column('last_login_ip', sa.String(length=255), server_default=sa.text("''::character varying"), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP(0)'), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP(0)'), nullable=False),
    sa.PrimaryKeyConstraint('id', name='pk_account_id')
    )
    op.create_table('account_oauth',
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('account_id', sa.UUID(), nullable=False),
    sa.Column('provider', sa.String(length=255), server_default=sa.text("''::character varying"), nullable=False),
    sa.Column('openid', sa.String(length=255), server_default=sa.text("''::character varying"), nullable=False),
    sa.Column('encrypted_token', sa.String(length=255), server_default=sa.text("''::character varying"), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP(0)'), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP(0)'), nullable=False),
    sa.PrimaryKeyConstraint('id', name='pk_account_oauth_id')
    )
    op.create_table('api_tool',
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('account_id', sa.UUID(), nullable=False),
    sa.Column('provider_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), server_default=sa.text("''::character varying"), nullable=False),
    sa.Column('description', sa.Text(), server_default=sa.text("''::text"), nullable=False),
    sa.Column('url', sa.String(length=255), server_default=sa.text("''::character varying"), nullable=False),
    sa.Column('method', sa.String(length=255), server_default=sa.text("''::character varying"), nullable=False),
    sa.Column('parameters', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'[]'::jsonb"), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP(0)'), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP(0)'), nullable=False),
    sa.PrimaryKeyConstraint('id', name='pk_api_tool_id')
    )
    op.create_table('api_tool_provider',
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('account_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), server_default=sa.text("''::character varying"), nullable=False),
    sa.Column('icon', sa.String(length=255), server_default=sa.text("''::character varying"), nullable=False),
    sa.Column('description', sa.Text(), server_default=sa.text("''::text"), nullable=False),
    sa.Column('openapi_schema', sa.Text(), server_default=sa.text("''::text"), nullable=False),
    sa.Column('headers', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'[]'::jsonb"), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP(0)'), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP(0)'), nullable=False),
    sa.PrimaryKeyConstraint('id', name='pk_api_tool_provider_id')
    )
    op.create_table('app',
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('account_id', sa.UUID(), nullable=False),
    sa.Column('app_config_id', sa.UUID(), nullable=True),
    sa.Column('draft_app_config_id', sa.UUID(), nullable=True),
    sa.Column('debug_conversation_id', sa.UUID(), nullable=True),
    sa.Column('name', sa.String(length=255), server_default=sa.text("''::character varying"), nullable=False),
    sa.Column('icon', sa.String(length=255), server_default=sa.text("''::character varying"), nullable=False),
    sa.Column('description', sa.Text(), server_default=sa.text("''::text"), nullable=False),
    sa.Column('status', sa.String(length=255), server_default=sa.text("''::character varying"), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP(0)'), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP(0)'), nullable=False),
    sa.PrimaryKeyConstraint('id', name='pk_app_id')
    )
    op.create_table('app_config',
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('app_id', sa.UUID(), nullable=False),
    sa.Column('model_config', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), nullable=False),
    sa.Column('dialog_round', sa.Integer(), server_default=sa.text('0'), nullable=False),
    sa.Column('preset_prompt', sa.Text(), server_default=sa.text("''::text"), nullable=False),
    sa.Column('tools', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'[]'::jsonb"), nullable=False),
    sa.Column('workflows', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'[]'::jsonb"), nullable=False),
    sa.Column('retrieval_config', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'[]'::jsonb"), nullable=False),
    sa.Column('long_term_memory', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), nullable=False),
    sa.Column('opening_statement', sa.Text(), server_default=sa.text("''::text"), nullable=False),
    sa.Column('opening_questions', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'[]'::jsonb"), nullable=False),
    sa.Column('speech_to_text', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), nullable=False),
    sa.Column('text_to_speech', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), nullable=False),
    sa.Column('review_config', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP(0)'), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP(0)'), nullable=False),
    sa.PrimaryKeyConstraint('id', name='pk_app_config_id')
    )
    op.create_table('app_config_version',
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('app_id', sa.UUID(), nullable=False),
    sa.Column('model_config', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), nullable=False),
    sa.Column('dialog_round', sa.Integer(), server_default=sa.text('0'), nullable=False),
    sa.Column('preset_prompt', sa.Text(), server_default=sa.text("''::text"), nullable=False),
    sa.Column('tools', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'[]'::jsonb"), nullable=False),
    sa.Column('workflows', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'[]'::jsonb"), nullable=False),
    sa.Column('datasets', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'[]'::jsonb"), nullable=False),
    sa.Column('retrieval_config', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), nullable=False),
    sa.Column('long_term_memory', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), nullable=False),
    sa.Column('opening_statement', sa.Text(), server_default=sa.text("''::text"), nullable=False),
    sa.Column('opening_questions', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'[]'::jsonb"), nullable=False),
    sa.Column('speech_to_text', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), nullable=False),
    sa.Column('text_to_speech', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), nullable=False),
    sa.Column('review_config', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), nullable=False),
    sa.Column('version', sa.Integer(), server_default=sa.text('0'), nullable=False),
    sa.Column('config_type', sa.String(length=255), server_default=sa.text("''::character varying"), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP(0)'), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP(0)'), nullable=False),
    sa.PrimaryKeyConstraint('id', name='pk_app_config_version_id')
    )
    op.create_table('app_dataset_join',
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('app_id', sa.UUID(), nullable=False),
    sa.Column('dataset_id', sa.UUID(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP(0)'), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP(0)'), nullable=False),
    sa.PrimaryKeyConstraint('id', name='pk_app_dataset_join_id')
    )
    op.create_table('conversation',
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('app_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), server_default=sa.text("''::character varying"), nullable=False),
    sa.Column('summary', sa.Text(), server_default=sa.text("''::text"), nullable=False),
    sa.Column('is_pinned', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('invoke_from', sa.String(length=255), server_default=sa.text("''::character varying"), nullable=False),
    sa.Column('created_by', sa.UUID(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP(0)'), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP(0)'), nullable=False),
    sa.PrimaryKeyConstraint('id', name='pk_conversation_id')
    )
    op.create_table('dataset',
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('account_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), server_default=sa.text("''::character varying"), nullable=False),
    sa.Column('icon', sa.String(length=255), server_default=sa.text("''::character varying"), nullable=False),
    sa.Column('description', sa.Text(), server_default=sa.text("''::text"), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP(0)'), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP(0)'), nullable=False),
    sa.PrimaryKeyConstraint('id', name='pk_dataset_id')
    )
    op.create_table('dataset_query',
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('dataset_id', sa.UUID(), nullable=False),
    sa.Column('query', sa.Text(), server_default=sa.text("''::text"), nullable=False),
    sa.Column('source', sa.String(length=255), server_default=sa.text("'HitTesting'::character varying"), nullable=False),
    sa.Column('source_app_id', sa.UUID(), nullable=True),
    sa.Column('created_by', sa.UUID(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP(0)'), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP(0)'), nullable=False),
    sa.PrimaryKeyConstraint('id', name='pk_dataset_query_id')
    )
    op.create_table('document',
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('account_id', sa.UUID(), nullable=False),
    sa.Column('dataset_id', sa.UUID(), nullable=False),
    sa.Column('upload_file_id', sa.UUID(), nullable=False),
    sa.Column('process_rule_id', sa.UUID(), nullable=False),
    sa.Column('batch', sa.String(length=255), server_default=sa.text("''::character varying"), nullable=False),
    sa.Column('name', sa.String(length=255), server_default=sa.text("''::character varying"), nullable=False),
    sa.Column('position', sa.Integer(), server_default=sa.text('1'), nullable=False),
    sa.Column('character_count', sa.Integer(), server_default=sa.text('0'), nullable=False),
    sa.Column('token_count', sa.Integer(), server_default=sa.text('0'), nullable=False),
    sa.Column('processing_started_at', sa.DateTime(), nullable=True),
    sa.Column('parsing_completed_at', sa.DateTime(), nullable=True),
    sa.Column('splitting_completed_at', sa.DateTime(), nullable=True),
    sa.Column('indexing_completed_at', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('stopped_at', sa.DateTime(), nullable=True),
    sa.Column('error', sa.Text(), server_default=sa.text("''::text"), nullable=False),
    sa.Column('enabled', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('disabled_at', sa.DateTime(), nullable=True),
    sa.Column('status', sa.String(length=255), server_default=sa.text("'waiting'::character varying"), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP(0)'), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP(0)'), nullable=False),
    sa.PrimaryKeyConstraint('id', name='pk_document_id')
    )
    op.create_table('keyword_table',
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('dataset_id', sa.UUID(), nullable=False),
    sa.Column('keyword_table', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP(0)'), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP(0)'), nullable=False),
    sa.PrimaryKeyConstraint('id', name='pk_keyword_table_id')
    )
    op.create_table('message',
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('app_id', sa.UUID(), nullable=False),
    sa.Column('conversation_id', sa.UUID(), nullable=False),
    sa.Column('invoke_from', sa.String(length=255), server_default=sa.text("''::character varying"), nullable=False),
    sa.Column('created_by', sa.UUID(), nullable=False),
    sa.Column('query', sa.Text(), server_default=sa.text("''::text"), nullable=False),
    sa.Column('message', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'[]'::jsonb"), nullable=False),
    sa.Column('message_token_count', sa.Integer(), server_default=sa.text('0'), nullable=False),
    sa.Column('message_unit_price', sa.Numeric(precision=10, scale=7), server_default=sa.text('0.0'), nullable=False),
    sa.Column('message_price_unit', sa.Numeric(precision=10, scale=4), server_default=sa.text('0.0'), nullable=False),
    sa.Column('answer', sa.Text(), server_default=sa.text("''::text"), nullable=False),
    sa.Column('answer_token_count', sa.Integer(), server_default=sa.text('0'), nullable=False),
    sa.Column('answer_unit_price', sa.Numeric(precision=10, scale=7), server_default=sa.text('0.0'), nullable=False),
    sa.Column('answer_price_unit', sa.Numeric(precision=10, scale=4), server_default=sa.text('0.0'), nullable=False),
    sa.Column('latency', sa.Float(), server_default=sa.text('0.0'), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('status', sa.String(length=255), server_default=sa.text("''::character varying"), nullable=False),
    sa.Column('error', sa.Text(), server_default=sa.text("''::text"), nullable=False),
    sa.Column('total_token_count', sa.Integer(), server_default=sa.text('0'), nullable=False),
    sa.Column('total_price', sa.Numeric(precision=10, scale=7), server_default=sa.text('0.0'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP(0)'), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP(0)'), nullable=False),
    sa.PrimaryKeyConstraint('id', name='pk_message_id')
    )
    op.create_table('message_agent_thought',
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('app_id', sa.UUID(), nullable=False),
    sa.Column('conversation_id', sa.UUID(), nullable=False),
    sa.Column('message_id', sa.UUID(), nullable=False),
    sa.Column('invoke_from', sa.String(length=255), server_default=sa.text("''::character varying"), nullable=False),
    sa.Column('created_by', sa.UUID(), nullable=False),
    sa.Column('position', sa.Integer(), server_default=sa.text('0'), nullable=False),
    sa.Column('event', sa.String(length=255), server_default=sa.text("''::character varying"), nullable=False),
    sa.Column('thought', sa.Text(), server_default=sa.text("''::text"), nullable=False),
    sa.Column('observation', sa.Text(), server_default=sa.text("''::text"), nullable=False),
    sa.Column('tool', sa.Text(), server_default=sa.text("''::text"), nullable=False),
    sa.Column('tool_input', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), nullable=False),
    sa.Column('message', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'[]'::jsonb"), nullable=False),
    sa.Column('message_token_count', sa.Integer(), server_default=sa.text('0'), nullable=False),
    sa.Column('message_unit_price', sa.Numeric(precision=10, scale=7), server_default=sa.text('0.0'), nullable=False),
    sa.Column('message_price_unit', sa.Numeric(precision=10, scale=4), server_default=sa.text('0'), nullable=False),
    sa.Column('answer', sa.Text(), server_default=sa.text("''::text"), nullable=False),
    sa.Column('answer_token_count', sa.Integer(), server_default=sa.text('0'), nullable=False),
    sa.Column('answer_unit_price', sa.Numeric(precision=10, scale=7), server_default=sa.text('0.0'), nullable=False),
    sa.Column('answer_price_unit', sa.Numeric(precision=10, scale=4), server_default=sa.text('0.0'), nullable=False),
    sa.Column('total_token_count', sa.Integer(), server_default=sa.text('0'), nullable=False),
    sa.Column('total_price', sa.Numeric(precision=10, scale=7), server_default=sa.text('0.0'), nullable=False),
    sa.Column('latency', sa.Float(), server_default=sa.text('0.0'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP(0)'), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP(0)'), nullable=False),
    sa.PrimaryKeyConstraint('id', name='pk_message_agent_thought_id')
    )
    op.create_table('process_rule',
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('account_id', sa.UUID(), nullable=False),
    sa.Column('dataset_id', sa.UUID(), nullable=False),
    sa.Column('mode', sa.String(length=255), server_default=sa.text("'automic'::character varying"), nullable=False),
    sa.Column('rule', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP(0)'), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP(0)'), nullable=False),
    sa.PrimaryKeyConstraint('id', name='pk_process_rule_id')
    )
    op.create_table('segment',
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('account_id', sa.UUID(), nullable=False),
    sa.Column('dataset_id', sa.UUID(), nullable=False),
    sa.Column('document_id', sa.UUID(), nullable=False),
    sa.Column('node_id', sa.UUID(), nullable=False),
    sa.Column('position', sa.Integer(), server_default=sa.text('1'), nullable=False),
    sa.Column('content', sa.Text(), server_default=sa.text("''::text"), nullable=False),
    sa.Column('character_count', sa.Integer(), server_default=sa.text('0'), nullable=False),
    sa.Column('token_count', sa.Integer(), server_default=sa.text('0'), nullable=False),
    sa.Column('keywords', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'[]'::jsonb"), nullable=False),
    sa.Column('hash', sa.String(length=255), server_default=sa.text("''::character varying"), nullable=False),
    sa.Column('hit_count', sa.Integer(), server_default=sa.text('0'), nullable=False),
    sa.Column('enabled', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('disabled_at', sa.DateTime(), nullable=True),
    sa.Column('processing_started_at', sa.DateTime(), nullable=True),
    sa.Column('indexing_completed_at', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('stopped_at', sa.DateTime(), nullable=True),
    sa.Column('error', sa.Text(), server_default=sa.text("''::text"), nullable=False),
    sa.Column('status', sa.String(length=255), server_default=sa.text("'waiting'::character varying"), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP(0)'), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP(0)'), nullable=False),
    sa.PrimaryKeyConstraint('id', name='pk_segment_id')
    )
    op.create_table('upload_file',
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('account_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), server_default=sa.text("''::character varying"), nullable=False),
    sa.Column('key', sa.String(length=255), server_default=sa.text("''::character varying"), nullable=False),
    sa.Column('size', sa.Integer(), server_default=sa.text('0'), nullable=False),
    sa.Column('extension', sa.String(length=255), server_default=sa.text("''::character varying"), nullable=False),
    sa.Column('mime_type', sa.String(length=255), server_default=sa.text("''::character varying"), nullable=False),
    sa.Column('hash', sa.String(length=255), server_default=sa.text("''::character varying"), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP(0)'), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP(0)'), nullable=False),
    sa.PrimaryKeyConstraint('id', name='pk_upload_file_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('upload_file')
    op.drop_table('segment')
    op.drop_table('process_rule')
    op.drop_table('message_agent_thought')
    op.drop_table('message')
    op.drop_table('keyword_table')
    op.drop_table('document')
    op.drop_table('dataset_query')
    op.drop_table('dataset')
    op.drop_table('conversation')
    op.drop_table('app_dataset_join')
    op.drop_table('app_config_version')
    op.drop_table('app_config')
    op.drop_table('app')
    op.drop_table('api_tool_provider')
    op.drop_table('api_tool')
    op.drop_table('account_oauth')
    op.drop_table('account')
    # ### end Alembic commands ###
